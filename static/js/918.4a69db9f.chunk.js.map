{"version":3,"file":"static/js/918.4a69db9f.chunk.js","mappings":"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","sources":["components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","redux/contacts/contacts-selector.jsx","components/ContactList/ContactList.style.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.style.jsx","components/Filter/Filter.jsx","components/pages/Contacts/Contacts.styled.jsx","components/pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  background-color: #f1895ca2;\n  margin-bottom: 15px;\n  padding: 15px;\n  border-radius: 5px;\n  transition: all 300ms ease 0s;\n  box-shadow: #2fe6be;\n  align-items: center;\n  box-shadow: rgb(0 0 0) 0px 1px 5px;\n  &:hover  {\n    opacity: 1;\n    transform: scale(1);\n    background: #f1895c;\n    scale: 1.01;\n    color: white;\n    box-shadow: rgb(0 0 0 / 89%) 0px 7px 10px;\n  }\n  &:hover button {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 250ms ease 0s;\n  }\n`;\n\nexport const Button = styled.button`\n  opacity: 0;\n  transform: scale(0.8);\n  border-radius: 5px;\n  border: 1px solid rgba(14, 185, 190, 0.925);\n  transition: all 250ms ease 0s;\n  &:hover {\n    color: rgb(255, 255, 255);\n    background: linear-gradient(\n      281deg,\n      rgb(23 145 128) 0%,\n      rgb(59 207 70) 100%\n    );\n  }\n`;","import { HiUserRemove } from 'react-icons/hi'\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { Item, Button } from './ContactsItem.styled';\n\nexport const ContactsItem = ({ contact }) => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n    return (\n        <Item>\n            {contact.name}: {contact.number}\n            <Button onClick={handleDelete}>\n                <HiUserRemove size={15} />\n            </Button>\n        </Item>\n    );\n};","\nexport const selectAllContacts = state => state.contacts.contactItems;\n\nexport const getContacts = store => store.contacts.contactItems;\nexport const getIsLoading = store => store.contacts.isLoading;\nexport const getError = store => store.contacts.error;\nexport const selectFilter = store => store.filter.value;\nexport const getFilter = store => store.filter.filter;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  max-height: 367px;\n  overflow-y: auto;\n  box-shadow: inset 5px 5px 10px #d1cdc7, inset -2.5px -2.5px 5px #ffffff;\n  border-radius: 5px;\n`","import React from \"react\";\nimport { ContactsItem } from \"components/ContactsItem/ContactsItem\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"redux/contacts/contacts-selector\";\n\nimport { List } from \"./ContactList.style\";\n\nexport const ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n\n    const getFindContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter)\n        );\n    };\n\n    const getFindContact = getFindContacts();\n\n    return (\n        <List>\n            {getFindContact.map(contact => (\n                <ContactsItem contact={contact} key={contact.id} />\n            ))}\n        </List>\n    );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 10px;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  margin-right: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 3px;\n  background-color: transparent;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-image: initial;\n  border-bottom: 2px solid rgb(34, 69, 145);\n  outline: none;\n  &::placeholder {\n    text-align: start;\n    color: #c24712;\n  }\n`;\n\nexport const FormButton = styled.button`\n  border-radius: 5px;\n  border: 1px solid #f1895c;\n  transition: all 250ms ease 0s;\n  &:hover {\n    cursor: pointer;\n    color: rgb(255, 255, 255);\n    background: linear-gradient(\n      281deg,\n      rgb(23 145 128) 0%,\n      rgb(59 207 70) 100%\n    );\n    transition: all 250ms ease 0s;\n  }\n`;","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from 'prop-types';\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAllContacts } from \"redux/contacts/contacts-selector\";\nimport { HiUserAdd } from \"react-icons/hi\";\n\nimport { Form, Label, Input, FormButton } from \"./ContactForm.styles\";\n\n\nexport default function ContactForm() {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameId = nanoid();\n    const phoneId = nanoid();\n\n    const contacts = useSelector(selectAllContacts);\n    const dispatch = useDispatch();\n\n    const handleChange = evt => {\n        const { name, value } = evt.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const newContact = {\n            name,\n            number,\n            id: nanoid()\n        };\n\n        const checkContact = contacts.some(contact =>\n            contact.name.toLowerCase() === name.toLowerCase()\n        );\n\n        checkContact ?\n            alert(`${name} is already in contacts`)\n            : dispatch(addContact(newContact));\n\n        resetSubmit();\n    };\n\n    const resetSubmit = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label htmlFor={nameId} >\n                Name:\n                <Input\n                    id={nameId}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </Label>\n            <Label htmlFor={phoneId}>\n                Number:\n                <Input\n                    id={phoneId}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </Label>\n            <FormButton type=\"submit\">\n                <HiUserAdd size={15} />\n            </FormButton>\n        </Form>\n    );\n};\n\n\nContactForm.prototypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n}","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 3px;\n  background-color: transparent;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-image: initial;\n  border-bottom: 2px solid rgb(22, 69, 197);\n  outline: none;\n  ::placeholder {\n    text-align: start;\n    color: #c24712;\n  }\n`;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/filterSlice\";\nimport { getFilter } from \"redux/contacts/contacts-selector\";\n\nimport { Input, Label } from \"./Filter.style\";\n\nconst FilterContacts = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const onChange = evt => {\n        dispatch(setFilter(evt.target.value));\n    };\n\n    return (\n        <Label>\n            <Input\n                type=\"text\"\n                name={filter}\n                value={filter}\n                onChange={onChange}\n                placeholder=\"Find contacts by name\"\n            />\n        </Label>\n    );\n};\n\nexport default FilterContacts;\n\n\n","import styled from \"@emotion/styled\";\n\nexport const Div = styled.div`\nmargin-top: 100px;\nposition: relative;\n`;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport FilterContacts from \"components/Filter/Filter\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { getIsLoading } from \"redux/contacts/contacts-selector\";\n\nimport { Div } from './Contacts.styled';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Div>\n            <title>Your Contacts</title>\n            <ContactForm />\n            <FilterContacts />\n            {isLoading || <ContactList />}\n        </Div>\n    )\n}"],"names":["Item","styled","Button","ContactsItem","contact","dispatch","useDispatch","name","number","onClick","deleteContact","id","size","selectAllContacts","state","contacts","contactItems","getContacts","store","getIsLoading","isLoading","getFilter","filter","List","ContactList","useSelector","getFindContact","normalizedFilter","toLowerCase","includes","getFindContacts","map","Form","Label","Input","FormButton","ContactForm","useState","setName","setNumber","nameId","nanoid","phoneId","handleChange","evt","currentTarget","value","resetSubmit","onSubmit","preventDefault","newContact","some","alert","addContact","htmlFor","type","onChange","pattern","title","required","prototypes","PropTypes","setFilter","target","placeholder","Div","Contacts","useEffect","fetchContacts","Filter"],"sourceRoot":""}